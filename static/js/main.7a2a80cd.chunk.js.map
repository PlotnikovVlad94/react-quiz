{"version":3,"sources":["components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/layout/Layout.js","components/ActiveQuiz/AnswerList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswerList/AnswerList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","components/UI/Loader/Loader.js","axios/axios-quiz.js","store/actions/quiz.js","store/actions/actionTypes.js","containers/Quiz/Quiz.js","components/UI/Input/Input.js","store/actions/auth.js","containers/Auth/Auth.js","containers/QuizList/QuizList.js","components/UI/Select/Select.js","form/formFramework.js","containers/QuizCreator/QuizCreator.js","store/actions/create.js","components/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/quiz.js","store/reducers/create.js","store/reducers/auth.js","store/reducers/rootReducer.js","index.js"],"names":["MenuToggle","props","cls","isOpen","push","className","join","onClick","onToggle","Backdrop","Drawer","clickHandler","onClose","links","map","link","index","key","to","exact","activeClassName","label","this","isAuthenticated","Fragment","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","connect","auth","token","AnswerItem","onAnswerClick","answer","id","text","AnswerList","answers","ActiveQuiz","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetry","Loader","axios","create","baseURL","fetchQuizSuccess","fetchQuizesSuccess","quizes","fetchQuizesError","e","error","quizSetState","answerState","Quiz","fetchQuizById","match","params","retryQuiz","loading","isFinished","activeQuestion","quizAnswerClick","dispatch","quizId","a","get","response","data","answerId","getState","rightAnswerId","timeout","window","setTimeout","isQuizFinished","questionNumber","clearTimeout","Input","isInvalid","valid","touched","shouldValidate","inputType","htmlFor","Math","random","value","onChange","errorMessage","autoLogout","time","logout","localStorage","removeItem","authSuccess","Auth","isFormValid","formControls","email","validation","required","password","minLength","submitHandler","event","preventDefault","loginHandler","registerHandler","onChangeHandler","controlName","control","target","validateControl","forEach","name","isValid","trim","is","onSubmit","renderInputs","isLogin","authData","returnSecureToken","url","post","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","QuizList","fetchQuizes","renderQuizes","Select","options","option","createControl","config","validate","validateForm","hasOwnProperty","createOptionControl","number","createFormControls","option1","option2","option3","option4","QuizCreator","addQuestionHandler","questionItem","createQuizQuestion","createQuizHandler","finishCreateQuiz","changeHandler","selectHandler","select","renderControls","item","Logout","App","autoLogin","routes","path","component","getItem","Boolean","location","hostname","initialState","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.7a2a80cd.chunk.js","sourcesContent":["import React from 'react'\r\nimport './MenuToggle.scss'\r\n\r\nconst MenuToggle = props => {\r\n  const cls = [\r\n    'menu-toggle',\r\n    'fa'\r\n  ]\r\n\r\n  props.isOpen ? cls.push('fa-times', 'open') : cls.push('fa-bars')\r\n\r\n  return (<i\r\n    className={cls.join(' ')}\r\n    onClick={props.onToggle}\r\n\r\n  />)\r\n}\r\n\r\nexport default MenuToggle","import React from 'react'\r\nimport './Backdrop.scss'\r\n\r\nconst Backdrop = props => <div className=\"backdrop\" onClick={props.onClick}></div>\r\n\r\nexport default Backdrop","import React, { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './Drawer.scss'\r\nimport Backdrop from '../../UI/Backdrop/Backdrop'\r\n\r\nclass Drawer extends Component {\r\n  clickHandler = () => {\r\n    this.props.onClose()\r\n  }\r\n\r\n  renderLinks(links) {\r\n    return links.map((link, index) => {\r\n      return (\r\n        <li key={index} className=\"drawer__item\">\r\n          <NavLink\r\n            to={link.to}\r\n            exact={link.exact}\r\n            activeClassName='active'\r\n            onClick={this.clickHandler}\r\n          >\r\n            {link.label}\r\n          </NavLink>\r\n        </li >\r\n      )\r\n    }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const cls = ['drawer'];\r\n\r\n    if (!this.props.isOpen) {\r\n      cls.push('close')\r\n    };\r\n\r\n    const links = [\r\n      { to: '/', label: 'Список тестов', exact: true }\r\n    ];\r\n\r\n    if (this.props.isAuthenticated) {\r\n      links.push({ to: '/quiz-creator', label: 'Создать тест', exact: false })\r\n      links.push({ to: '/logout', label: 'Выйти', exact: false })\r\n    } else {\r\n      links.push({ to: '/auth', label: 'Авторизация', exact: false })\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <nav className={cls.join(' ')}>\r\n          <ul className=\"drawer__list\"> {this.renderLinks(links)}</ul>\r\n        </nav>\r\n        {this.props.isOpen ? <Backdrop onClick={this.props.onClose} /> : null}\r\n      </React.Fragment>\r\n\r\n    )\r\n  }\r\n\r\n};\r\n\r\nexport default Drawer","import React, { Component } from \"react\"\r\nimport \"./Layout.scss\"\r\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle'\r\nimport Drawer from '../../components/Navigation/Drawer/Drawer'\r\nimport { connect } from \"react-redux\"\r\n\r\nclass Layout extends Component {\r\n  state = {\r\n    menu: false\r\n  }\r\n\r\n  toggleMenuHandler = () => {\r\n    this.setState({\r\n      menu: !this.state.menu\r\n    })\r\n  }\r\n\r\n  menuCloseHandler = () => {\r\n    this.setState({\r\n      menu: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"layout\">\r\n        <Drawer\r\n          isOpen={this.state.menu}\r\n          onClose={this.menuCloseHandler}\r\n          isAuthenticated={this.props.isAuthenticated}\r\n        />\r\n        <MenuToggle\r\n          onToggle={this.toggleMenuHandler}\r\n          isOpen={this.state.menu}\r\n        />\r\n        <main className=\"main-content\"> {this.props.children}</main>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isAuthenticated: !!state.auth.token\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout)","import React from \"react\"\r\nimport \"./AnswerItem.scss\"\r\n\r\nconst AnswerItem = (props) => {\r\n\r\n  const cls = ['answer-item']\r\n\r\n  if (props.state) {\r\n    cls.push(props.state)\r\n  }\r\n\r\n  return (\r\n    <li\r\n      className={cls.join(' ')}\r\n      onClick={() => props.onAnswerClick(props.answer.id)}\r\n    >\r\n      {props.answer.text}\r\n    </li>)\r\n}\r\n\r\nexport default AnswerItem\r\n","import React from \"react\"\r\nimport \"./AnswerList.scss\"\r\nimport AnswerItem from \"./AnswerItem/AnswerItem\"\r\n\r\nconst AnswerList = (props) => (\r\n  <ul className=\"answer-list\">\r\n    {props.answers.map((answer, index) => {\r\n      return <AnswerItem\r\n        key={index}\r\n        answer={answer}\r\n        onAnswerClick={props.onAnswerClick}\r\n        state={props.state ? props.state[answer.id] : null}\r\n      />;\r\n    })}\r\n  </ul>\r\n);\r\n\r\nexport default AnswerList\r\n","import React from 'react'\r\nimport './ActiveQuiz.scss'\r\nimport AnswerList from './AnswerList/AnswerList'\r\n\r\nconst ActiveQuiz = (props) => (\r\n  <div className=\"active-quiz\">\r\n    <div className=\"active-quiz__question\">\r\n      <h2>{props.answerNumber}. {props.question}</h2>\r\n      <span>{props.answerNumber} из {props.quizLength}</span>\r\n    </div>\r\n    <AnswerList\r\n      state={props.state}\r\n      answers={props.answers}\r\n      onAnswerClick={props.onAnswerClick}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default ActiveQuiz","import React from 'react'\r\nimport './Button.scss'\r\n\r\nconst Button = (props) => {\r\n  const cls = [\r\n    'button',\r\n    props.type\r\n  ]\r\n  return (\r\n    <button\r\n      className={cls.join(' ')}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './FinishedQuiz.scss'\r\nimport Button from '../../components/UI/Button/Button'\r\n\r\nconst FinishedQuiz = props => {\r\n\r\n  const successCount = Object.keys(props.results).reduce((total, key) => {\r\n    if (props.results[key] === 'success') {\r\n      total++\r\n    }\r\n    return total\r\n  }, 0)\r\n\r\n  return (\r\n    <div className=\"finished-quiz\">\r\n      <ul className=\"finished-quiz__list\">\r\n        {props.quiz.map((quizItem, index) => {\r\n          const cls = [\r\n            'fa',\r\n            props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\r\n            props.results[quizItem.id]\r\n          ]\r\n          return (\r\n            <li key={index} className=\"finished-quiz__item\">\r\n              <strong>{index + 1}</strong>.&nbsp;\r\n              {quizItem.question}\r\n              <i className={cls.join(' ')} />\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n      <div className=\"finished-quiz__result\">\r\n        <p>Правильно {successCount} из {props.quiz.length}</p>\r\n\r\n        <div className=\"finished-quiz__btn\">\r\n          <Button onClick={props.onRetry} type=\"primary\">Повторить</Button>\r\n          <Link to={'/'}>\r\n            <Button type=\"success\">К списку вопросов</Button>\r\n          </Link>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FinishedQuiz","import React from 'react'\r\nimport './Loader.scss'\r\n\r\nconst Loader = props => {\r\n  return (\r\n    <div className=\"lds-dual-ring\"></div>\r\n  )\r\n}\r\n\r\nexport default Loader","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://react-quiz-ad6e1.firebaseio.com/'\r\n})","import axios from '../../axios/axios-quiz'\r\nimport {\r\n  FETCH_QUIZES_START,\r\n  FETCH_QUIZES_SUCCESS,\r\n  FETCH_QUIZES_ERROR,\r\n  FETCH_QUIZ_SUCCESS,\r\n  QUIZ_SET_STATE,\r\n  FINISH_QUIZ,\r\n  QUIZ_NEXT_QUESTION,\r\n  QUIZ_RETRY\r\n} from './actionTypes'\r\n\r\nexport function fetchQuizes() {\r\n  return async dispatch => {\r\n    dispatch(fetchQuizesStart())\r\n    try {\r\n      const response = await axios.get('/quizes.json');\r\n      const quizes = [];\r\n      Object.keys(response.data).forEach((key, index) => {\r\n        quizes.push({\r\n          id: key,\r\n          name: `Тест №${index + 1}`\r\n        })\r\n      })\r\n      dispatch(fetchQuizesSuccess(quizes))\r\n    } catch (e) {\r\n      dispatch(fetchQuizesError(e))\r\n    }\r\n  }\r\n}\r\n\r\nexport function fetchQuizById(quizId) {\r\n  return async dispatch => {\r\n    dispatch(fetchQuizesStart())\r\n    try {\r\n      const response = await axios.get(`/quizes/${quizId}.json`);\r\n      const quiz = response.data;\r\n      dispatch(fetchQuizSuccess(quiz))\r\n    } catch (e) {\r\n      dispatch(fetchQuizesError(e))\r\n    }\r\n  }\r\n}\r\n\r\nexport function fetchQuizSuccess(quiz) {\r\n  return {\r\n    type: FETCH_QUIZ_SUCCESS,\r\n    quiz\r\n  }\r\n}\r\n\r\nexport function fetchQuizesStart() {\r\n  return {\r\n    type: FETCH_QUIZES_START\r\n  }\r\n}\r\nexport function fetchQuizesSuccess(quizes) {\r\n  return {\r\n    type: FETCH_QUIZES_SUCCESS,\r\n    quizes\r\n  }\r\n}\r\nexport function fetchQuizesError(e) {\r\n  return {\r\n    type: FETCH_QUIZES_ERROR,\r\n    error: e\r\n  }\r\n}\r\n\r\nexport function quizSetState(answerState, results) {\r\n  return {\r\n    type: QUIZ_SET_STATE,\r\n    answerState, results\r\n  }\r\n}\r\n\r\nexport function finishQuiz() {\r\n  return {\r\n    type: FINISH_QUIZ\r\n  }\r\n}\r\n\r\nexport function quizNextQuestion(questionNumber) {\r\n  return {\r\n    type: QUIZ_NEXT_QUESTION,\r\n    questionNumber\r\n  }\r\n}\r\n\r\nexport function retryQuiz() {\r\n  return {\r\n    type: QUIZ_RETRY\r\n  }\r\n}\r\n\r\nexport function quizAnswerClick(answerId) {\r\n  return (dispatch, getState) => {\r\n    const state = getState().quiz\r\n    if (state.answerState) {\r\n      const key = Object.keys(state.answerState)[0]\r\n      if (state.answerState[key] === 'success') {\r\n        return\r\n      }\r\n    }\r\n\r\n    const question = state.quiz[state.activeQuestion]\r\n    const results = state.results\r\n\r\n    if (question.rightAnswerId === answerId) {\r\n      if (!results[question.id]) {\r\n        results[question.id] = 'success'\r\n      }\r\n      dispatch(quizSetState({ [answerId]: 'success' }, results))\r\n\r\n      const timeout = window.setTimeout(() => {\r\n        if (isQuizFinished(state)) {\r\n          dispatch(finishQuiz())\r\n        } else {\r\n          dispatch(quizNextQuestion(state.activeQuestion + 1))\r\n        }\r\n        window.clearTimeout(timeout)\r\n      }, 1000)\r\n    } else {\r\n      results[question.id] = 'error'\r\n      dispatch(quizSetState({ [answerId]: 'error' }, results))\r\n    }\r\n  }\r\n}\r\n\r\nfunction isQuizFinished(state) {\r\n  return state.activeQuestion + 1 === state.quiz.length\r\n}","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START'\r\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS'\r\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR'\r\n\r\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS'\r\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE'\r\nexport const FINISH_QUIZ = 'FINISH_QUIZ'\r\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION'\r\nexport const QUIZ_RETRY = 'QUIZ_RETRY'\r\n\r\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION'\r\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION'\r\n\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'","import React, { Component } from 'react'\r\nimport \"./Quiz.scss\"\r\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\"\r\nimport FinishedQuiz from \"../../components/FinishedQuiz/FinishedQuiz\"\r\nimport Loader from '../../components/UI/Loader/Loader'\r\nimport { fetchQuizById, quizAnswerClick, retryQuiz } from '../../store/actions/quiz'\r\nimport { connect } from \"react-redux\"\r\n\r\nclass Quiz extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchQuizById(this.props.match.params.id)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.retryQuiz()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"quiz\">\r\n        <h1>Выберите правильный ответ</h1>\r\n        {\r\n          this.props.loading || !this.props.quiz\r\n            ? <Loader />\r\n            : this.props.isFinished\r\n              ? <FinishedQuiz\r\n                results={this.props.results}\r\n                quiz={this.props.quiz}\r\n                onRetry={this.props.retryQuiz}\r\n              />\r\n              : <ActiveQuiz\r\n                answers={this.props.quiz[this.props.activeQuestion].answers}\r\n                question={this.props.quiz[this.props.activeQuestion].question}\r\n                onAnswerClick={this.props.quizAnswerClick}\r\n                quizLength={this.props.quiz.length}\r\n                answerNumber={this.props.activeQuestion + 1}\r\n                state={this.props.answerState}\r\n              />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    activeQuestion: state.quiz.activeQuestion,\r\n    answerState: state.quiz.answerState,\r\n    isFinished: state.quiz.isFinished,\r\n    results: state.quiz.results,\r\n    quiz: state.quiz.quiz,\r\n    loading: state.quiz.loading\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    fetchQuizById: id => dispatch(fetchQuizById(id)),\r\n    quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\r\n    retryQuiz: () => dispatch(retryQuiz())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)","import React from 'react'\r\nimport './Input.scss'\r\n\r\nconst Input = props => {\r\n\r\n  function isInvalid({ valid, touched, shouldValidate }) {\r\n    return !valid && shouldValidate && touched\r\n  };\r\n\r\n  const cls = ['input-container'];\r\n  const inputType = props.type || 'text';\r\n  const htmlFor = `${inputType}-${Math.random()}`;\r\n\r\n  if (isInvalid(props)) {\r\n    cls.push('invalid')\r\n  }\r\n\r\n  return (\r\n    <div className={cls.join(' ')}>\r\n      <label htmlFor={htmlFor}>{props.label}</label>\r\n      <input\r\n        type={inputType}\r\n        id={htmlFor}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n      />\r\n\r\n      {\r\n        isInvalid(props)\r\n          ? <span>{props.errorMessage || 'Проверьте введенные данные'}</span>\r\n          : null\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input","import axios from 'axios'\r\nimport { AUTH_SUCCESS, AUTH_LOGOUT } from './actionTypes'\r\n\r\nexport function auth(email, password, isLogin) {\r\n  return async (dispatch) => {\r\n    const authData = {\r\n      email, password,\r\n      returnSecureToken: true\r\n    }\r\n\r\n    let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCn_g9IH_GKKV09QSfnpRfybF8aksYJgAI'\r\n\r\n    if (isLogin) {\r\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCn_g9IH_GKKV09QSfnpRfybF8aksYJgAI'\r\n    }\r\n\r\n    const response = await axios.post(url, authData)\r\n    const data = response.data\r\n\r\n    const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)\r\n\r\n    localStorage.setItem('token', data.idToken)\r\n    localStorage.setItem('userId', data.localId)\r\n    localStorage.setItem('expirationDate', expirationDate)\r\n\r\n    dispatch(authSuccess(data.idToken))\r\n    dispatch(autoLogout(data.expiresIn))\r\n  }\r\n}\r\n\r\nexport function autoLogout(time) {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      dispatch(logout())\r\n    }, time * 1000)\r\n  }\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem('token')\r\n  localStorage.removeItem('userId')\r\n  localStorage.removeItem('expirationDate')\r\n\r\n  return {\r\n    type: AUTH_LOGOUT\r\n  }\r\n}\r\n\r\nexport function autoLogin() {\r\n  return dispatch => {\r\n    const token = localStorage.getItem('token')\r\n    if (!token) {\r\n      dispatch(logout())\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(logout())\r\n      } else {\r\n        dispatch(authSuccess(token))\r\n        dispatch(autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000))\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function authSuccess(token) {\r\n  return {\r\n    type: AUTH_SUCCESS,\r\n    token\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport './Auth.scss'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport is from 'is_js'\r\nimport { auth } from '../../store/actions/auth'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Auth extends Component {\r\n\r\n  state = {\r\n    isFormValid: false,\r\n    formControls: {\r\n      email: {\r\n        value: '',\r\n        type: 'email',\r\n        label: 'Email',\r\n        errorMessage: 'Введите корректный email',\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          email: true\r\n        }\r\n      },\r\n      password: {\r\n        value: '',\r\n        type: 'password',\r\n        label: 'Пароль',\r\n        errorMessage: 'Введите корректный пароль',\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          minLength: 6\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault()\r\n  }\r\n\r\n  loginHandler = () => {\r\n    this.props.auth(\r\n      this.state.formControls.email.value,\r\n      this.state.formControls.password.value,\r\n      true\r\n    )\r\n  }\r\n\r\n  registerHandler = () => {\r\n    this.props.auth(\r\n      this.state.formControls.email.value,\r\n      this.state.formControls.password.value,\r\n      false\r\n    )\r\n\r\n  }\r\n\r\n  validateControl(value, validation) {\r\n    if (!validation) {\r\n      return true\r\n    }\r\n\r\n    let isValid = true;\r\n\r\n    if (validation.required) {\r\n      isValid = value.trim() !== '' && isValid\r\n    }\r\n\r\n    if (validation.email) {\r\n      isValid = is.email(value) && isValid\r\n    }\r\n\r\n    if (validation.minLength) {\r\n      isValid = value.length >= validation.minLength && isValid\r\n    }\r\n    return isValid;\r\n  }\r\n\r\n  onChangeHandler = (event, controlName) => {\r\n    const formControls = { ...this.state.formControls };\r\n    const control = { ...formControls[controlName] };\r\n\r\n    control.value = event.target.value;\r\n    control.touched = true;\r\n    control.valid = this.validateControl(control.value, control.validation);\r\n\r\n    formControls[controlName] = control;\r\n\r\n    let isFormValid = true;\r\n    Object.keys(formControls).forEach(name => {\r\n      isFormValid = formControls[name].valid && isFormValid\r\n    })\r\n\r\n    this.setState({\r\n      formControls, isFormValid\r\n    })\r\n  }\r\n\r\n  renderInputs() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName]\r\n      return (\r\n        <Input\r\n          key={controlName + index}\r\n          value={control.value}\r\n          type={control.type}\r\n          label={control.label}\r\n          errorMessage={control.errorMessage}\r\n          valid={control.valid}\r\n          touched={control.touched}\r\n          shouldValidate={!!control.validation}\r\n          onChange={event => this.onChangeHandler(event, controlName)}\r\n        />\r\n      )\r\n    })\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"auth\">\r\n        <div className=\"auth__container\">\r\n          <h1>Авторизация</h1>\r\n          <form\r\n            onSubmit={this.submitHandler}\r\n            className=\"auth__form\"\r\n          >\r\n            {this.renderInputs()}\r\n\r\n            <Button\r\n              type=\"success\"\r\n              onClick={this.loginHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >\r\n              Войти\r\n            </Button>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={this.registerHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >\r\n              Регистрация\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Auth);","import React, { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './QuizList.scss'\r\nimport Loader from '../../components/UI/Loader/Loader'\r\nimport { fetchQuizes } from '../../store/actions/quiz'\r\nimport { connect } from \"react-redux\"\r\n\r\nclass QuizList extends Component {\r\n\r\n  renderQuizes() {\r\n    return this.props.quizes.map(quiz => {\r\n      return (\r\n        <li key={quiz.id} className=\"quizes__list--item\">\r\n          <NavLink\r\n            to={'/quiz/' + quiz.id}\r\n            className=\"quizes__list--link\"\r\n          >\r\n            {quiz.name}\r\n          </NavLink>\r\n        </li >\r\n      )\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchQuizes()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"quizes\">\r\n        <h1>Список тестов</h1>\r\n        {\r\n          this.props.loading\r\n            ? <Loader />\r\n            : <ul className=\"quizes__list\">\r\n              {this.renderQuizes()}\r\n            </ul>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    quizes: state.quiz.quizes,\r\n    loading: state.quiz.loading\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    fetchQuizes: () => dispatch(fetchQuizes())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList)","import React from 'react'\r\nimport './Select.scss'\r\n\r\nconst Select = props => {\r\n  const htmlFor = `${props.label}-${Math.random()}`\r\n  return (\r\n    <div className=\"select-container\">\r\n      <label htmlFor={htmlFor}>{props.label}</label>\r\n      <select\r\n        id={htmlFor}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n      >\r\n        {props.options.map((option, index) => {\r\n          return (\r\n            <option\r\n              value={option.value}\r\n              key={option.value + index}\r\n            >{option.text}</option>\r\n          )\r\n        })}\r\n      </select>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Select;","export function createControl(config, validation) {\r\n  return {\r\n    ...config,\r\n    validation,\r\n    valid: !validation,\r\n    touched: false,\r\n    value: ''\r\n  }\r\n}\r\n\r\nexport function validate(value, validation = null) {\r\n  if (!validation) {\r\n    return true\r\n  }\r\n\r\n  let isValid = true\r\n  if (validation.required) {\r\n    isValid = value.trim() !== '' && isValid\r\n  }\r\n  return isValid\r\n}\r\n\r\nexport function validateForm(formControls) {\r\n  let isFormValid = true\r\n\r\n  for (let control in formControls) {\r\n    if (formControls.hasOwnProperty(control)) {\r\n      isFormValid = formControls[control].valid && isFormValid\r\n    }\r\n  }\r\n  return isFormValid\r\n}","import React, { Component } from 'react'\r\nimport './QuizCreator.scss'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport Select from '../../components/UI//Select/Select'\r\nimport { createControl, validate, validateForm } from '../../form/formFramework'\r\nimport { createQuizQuestion, finishCreateQuiz } from '../../store/actions/create'\r\nimport { connect } from \"react-redux\"\r\n\r\nfunction createOptionControl(number) {\r\n  return createControl({\r\n    label: `Вариант ${number}`,\r\n    errorMessage: 'Поле не может быть пустым',\r\n    id: number\r\n  },\r\n    { required: true })\r\n}\r\n\r\nfunction createFormControls() {\r\n  return {\r\n    question: createControl({\r\n      label: 'Введите вопрос',\r\n      errorMessage: 'Поле не может быть пустым'\r\n    },\r\n      { required: true }),\r\n    option1: createOptionControl(1),\r\n    option2: createOptionControl(2),\r\n    option3: createOptionControl(3),\r\n    option4: createOptionControl(4)\r\n  }\r\n}\r\n\r\nclass QuizCreator extends Component {\r\n  state = {\r\n    isFormValid: false,\r\n    rightAnswerId: 1,\r\n    formControls: createFormControls()\r\n  }\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault()\r\n  }\r\n\r\n  addQuestionHandler = event => {\r\n    event.preventDefault()\r\n\r\n    const { question, option1, option2, option3, option4 } = this.state.formControls\r\n\r\n    const questionItem = {\r\n      question: question.value,\r\n      id: this.props.quiz.length + 1,\r\n      rightAnswerId: this.state.rightAnswerId,\r\n      answers: [\r\n        { text: option1.value, id: option1.id },\r\n        { text: option2.value, id: option2.id },\r\n        { text: option3.value, id: option3.id },\r\n        { text: option4.value, id: option4.id }\r\n      ]\r\n    }\r\n\r\n    this.props.createQuizQuestion(questionItem)\r\n\r\n    this.setState({\r\n      isFormValid: false,\r\n      rightAnswerId: 1,\r\n      formControls: createFormControls()\r\n    })\r\n  }\r\n\r\n  createQuizHandler = event => {\r\n    event.preventDefault()\r\n\r\n    this.setState({\r\n      isFormValid: false,\r\n      rightAnswerId: 1,\r\n      formControls: createFormControls()\r\n    })\r\n    this.props.finishCreateQuiz()\r\n  }\r\n\r\n  changeHandler = (value, controlName) => {\r\n    const formControls = { ...this.state.formControls };\r\n    const control = { ...formControls[controlName] };\r\n\r\n    control.touched = true;\r\n    control.value = value;\r\n    control.valid = validate(control.value, control.validation);\r\n\r\n    formControls[controlName] = control;\r\n\r\n    this.setState({\r\n      formControls,\r\n      isFormValid: validateForm(formControls)\r\n    })\r\n  }\r\n\r\n  renderControls() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName]\r\n\r\n      return (\r\n        <React.Fragment key={controlName + index}>\r\n          <Input\r\n            value={control.value}\r\n            label={control.label}\r\n            errorMessage={control.errorMessage}\r\n            valid={control.valid}\r\n            touched={control.touched}\r\n            shouldValidate={!!control.validation}\r\n            onChange={event => this.changeHandler(event.target.value, controlName)}\r\n          />\r\n          {index === 0 ? <hr /> : null}\r\n        </React.Fragment>\r\n      )\r\n    })\r\n  }\r\n\r\n  selectHandler = event => {\r\n    this.setState({\r\n      rightAnswerId: +event.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const select = <Select\r\n      label=\"Выберите правильный ответ\"\r\n      rightAnswerId={this.state.rightAnswerId}\r\n      onChange={this.selectHandler}\r\n      options={[\r\n        { text: 1, value: 1 },\r\n        { text: 2, value: 2 },\r\n        { text: 3, value: 3 },\r\n        { text: 4, value: 4 }\r\n      ]}\r\n    />\r\n    return (\r\n      <div className=\"quiz-creator\">\r\n        <h1>Создание теста</h1>\r\n        <form\r\n          onSubmit={this.submitHandler}\r\n          className=\"quiz-creator__form\"\r\n        >\r\n          {this.renderControls()}\r\n          {select}\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={this.addQuestionHandler}\r\n            disabled={!this.state.isFormValid}\r\n          >\r\n            Добавить вопрос\r\n          </Button>\r\n          <Button\r\n            type=\"success\"\r\n            onClick={this.createQuizHandler}\r\n            disabled={this.props.quiz.length === 0}\r\n          >\r\n            Создать тест\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    quiz: state.create.quiz\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    createQuizQuestion: item => dispatch(createQuizQuestion(item)),\r\n    finishCreateQuiz: () => dispatch(finishCreateQuiz())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator)","import { CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION } from './actionTypes'\r\nimport axios from '../../axios/axios-quiz'\r\n\r\nexport function createQuizQuestion(item) {\r\n  return {\r\n    type: CREATE_QUIZ_QUESTION,\r\n    item\r\n  }\r\n}\r\n\r\nexport function resetQuizCreation() {\r\n  return {\r\n    type: RESET_QUIZ_CREATION\r\n  }\r\n}\r\n\r\nexport function finishCreateQuiz() {\r\n  return async (dispatch, getState) => {\r\n    await axios.post('/quizes.json', getState().create.quiz)\r\n    dispatch(resetQuizCreation())\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { logout } from '../../store/actions/auth'\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    this.props.logout()\r\n  }\r\n\r\n  render() {\r\n    return <Redirect to={'/'} />\r\n  }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    logout: () => dispatch(logout())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout)","import React, { Component } from \"react\"\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport Layout from \"./hoc/layout/Layout\"\nimport Quiz from \"./containers/Quiz/Quiz\"\nimport Auth from \"./containers/Auth/Auth\"\nimport QuizList from \"./containers/QuizList/QuizList\"\nimport QuizCreator from \"./containers/QuizCreator/QuizCreator\"\nimport Logout from './components/Logout/Logout'\nimport { autoLogin } from './store/actions/auth'\nimport './App.scss'\nimport { connect } from \"react-redux\"\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.autoLogin()\n  }\n\n  render() {\n\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/quiz/:id\" component={Quiz} />\n        <Route path=\"/\" exact component={QuizList} />\n        <Redirect to={'/'} />\n      </Switch>\n    )\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path=\"/quiz-creator\" component={QuizCreator} />\n          <Route path=\"/quiz/:id\" component={Quiz} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/\" exact component={QuizList} />\n          <Redirect to={'/'} />\n        </Switch>\n      )\n    }\n\n    return (\n      <Layout>\n        {routes}\n      </Layout>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.auth.token\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    autoLogin: () => dispatch(autoLogin())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  FETCH_QUIZES_START,\r\n  FETCH_QUIZES_SUCCESS,\r\n  FETCH_QUIZES_ERROR,\r\n  FETCH_QUIZ_SUCCESS,\r\n  QUIZ_SET_STATE,\r\n  FINISH_QUIZ,\r\n  QUIZ_NEXT_QUESTION,\r\n  QUIZ_RETRY\r\n} from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n  quizes: [],\r\n  loading: false,\r\n  error: null,\r\n  activeQuestion: 0,\r\n  answerState: null,\r\n  isFinished: false,\r\n  results: {},\r\n  quiz: null\r\n}\r\n\r\nexport default function quizReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_QUIZES_START:\r\n      return {\r\n        ...state, loading: true\r\n      }\r\n    case FETCH_QUIZES_SUCCESS:\r\n      return {\r\n        ...state, loading: false, quizes: action.quizes\r\n      }\r\n    case FETCH_QUIZES_ERROR:\r\n      return {\r\n        ...state, loading: false, error: action.error\r\n      }\r\n    case FETCH_QUIZ_SUCCESS:\r\n      return {\r\n        ...state, loading: false, quiz: action.quiz\r\n      }\r\n    case QUIZ_SET_STATE:\r\n      return {\r\n        ...state, answerState: action.answerState, results: action.results\r\n      }\r\n    case FINISH_QUIZ:\r\n      return {\r\n        ...state, isFinished: true\r\n      }\r\n    case QUIZ_NEXT_QUESTION:\r\n      return {\r\n        ...state, answerState: null, activeQuestion: action.questionNumber\r\n      }\r\n    case QUIZ_RETRY:\r\n      return {\r\n        ...state,\r\n        activeQuestion: 0,\r\n        answerState: null,\r\n        isFinished: false,\r\n        results: {},\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION } from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n  quiz: []\r\n}\r\n\r\nexport default function createReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case CREATE_QUIZ_QUESTION:\r\n      return {\r\n        ...state,\r\n        quiz: [...state.quiz, action.item]\r\n      }\r\n    case RESET_QUIZ_CREATION:\r\n      return {\r\n        ...state, quiz: []\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { AUTH_SUCCESS, AUTH_LOGOUT } from \"../actions/actionTypes\"\r\n\r\nconst initialState = {\r\n  token: null\r\n}\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case AUTH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        token: action.token\r\n      }\r\n    case AUTH_LOGOUT:\r\n      return {\r\n        ...state, token: null\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { combineReducers } from 'redux'\r\nimport quizReducer from './quiz'\r\nimport createReducer from './create'\r\nimport authReducer from './auth'\r\n\r\nexport default combineReducers({\r\n  quiz: quizReducer,\r\n  create: createReducer,\r\n  auth: authReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport thunk from 'redux-thunk'\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    }) : compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(thunk)\n  )\n)\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}